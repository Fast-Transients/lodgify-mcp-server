name: Build and Push Docker Image

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha,mode=min
        cache-to: type=gha,mode=min

    - name: Test Docker image locally
      if: github.event_name == 'pull_request'
      run: |
        UNIQUE_TAG=test-image-${{ github.sha }}
        docker buildx build --platform linux/amd64 --load --tag $UNIQUE_TAG .
        echo Testing local image...
        docker run --rm $UNIQUE_TAG --mode info
        docker run --rm -e LODGIFY_API_KEY=test-key-for-import-only $UNIQUE_TAG --mode test || true

    - name: Test pushed Docker image
      if: github.event_name != 'pull_request'
      run: |
        sleep 30
        IMAGE_TAG=$(echo ${{ steps.meta.outputs.tags }} | head -n1)
        echo Testing pushed image: $IMAGE_TAG
        for i in {1..3}; do
          if docker run --rm $IMAGE_TAG --mode info; then
            echo Image test successful on attempt $i
            break
          else
            echo Image test failed on attempt $i
            sleep 10
          fi
        done
        docker run --rm -e LODGIFY_API_KEY=test-key-for-import-only $IMAGE_TAG --mode test || true
